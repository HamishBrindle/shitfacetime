{"version":3,"sources":["webpack:///webpack/bootstrap 8b24d1f64a1f6d3dd3bf","webpack:///./public/sass/style.scss","webpack:///./public/javascripts/shitfacetime.js"],"names":["navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","APP_NAME","room","partyVideoStreamURL","clientVideoStreamURL","socketConnected","peerConnected","peerid","peerSettings","host","secure","port","debug","config","url","username","credential","socket","io","peerjs","Peer","on","makePeerHeartbeater","consoleMessage","peerjsConnectedUI","findPeer","startCall","video","audio","stream","onCallLoading","hangupCall","call","remoteStream","onCallConnected","$","prop","URL","createObjectURL","attr","window","existingCall","text","peer","callConnectedUI","err","onClientLoadVideoFailed","console","log","answer","onCallFailedRetry","open","close","emit","reconnect","disconnected","message","socketConnectedUI","data","caller","onFindingParty","onClientDisconnected","sender","id","html","append","scrollTop","scrollHeight","addClass","removeClass","status","to","from","onClientReady","setupCall","localStream","hide","onClientLoadVideoSuccess","onCallEnded","timeoutId","heartbeat","setTimeout","_wsOpen","send","type","start","stop","clearTimeout","onPartyDisconnected","show","click","sendChatMessage","document","keypress","e","which","val"],"mappings":"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","file":"App.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8b24d1f64a1f6d3dd3bf","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/sass/style.scss\n// module id = 0\n// module chunks = 0","import '../sass/style.scss';\r\n\r\n// Compatibility shim\r\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n\r\n// General Variables\r\nconst APP_NAME = 'SFT';\r\nvar room = '';\r\nvar partyVideoStreamURL = null;\r\nvar clientVideoStreamURL = null;\r\nvar socketConnected = false;\r\nvar peerConnected = false;\r\nvar peerid = '';\r\nvar peerSettings = {　\r\n    host: 'sft-peer.herokuapp.com',\r\n    secure: true,\r\n    port: 443,\r\n    debug: 3,\r\n    config: {\r\n        'iceServers': [{\r\n                url: \"stun:global.stun.twilio.com:3478?transport=udp\"\r\n            },\r\n            {\r\n                url: \"turn:global.turn.twilio.com:3478?transport=udp\",\r\n                username: \"6126da033a7be666f10a3f1c0a4bf26f0111c0ac7e7ebd9e3503a181f9e51d8c\",\r\n                credential: \"bM0+RW4MfPkSJRkGMtdo26vI36/USjTt6zG4Eaitt8s=\"\r\n            },\r\n            {\r\n                url: \"turn:global.turn.twilio.com:3478?transport=tcp\",\r\n                username: \"6126da033a7be666f10a3f1c0a4bf26f0111c0ac7e7ebd9e3503a181f9e51d8c\",\r\n                credential: \"bM0+RW4MfPkSJRkGMtdo26vI36/USjTt6zG4Eaitt8s=\"\r\n            },\r\n            {\r\n                url: \"turn:global.turn.twilio.com:443?transport=tcp\",\r\n                username: \"6126da033a7be666f10a3f1c0a4bf26f0111c0ac7e7ebd9e3503a181f9e51d8c\",\r\n                credential: \"bM0+RW4MfPkSJRkGMtdo26vI36/USjTt6zG4Eaitt8s=\"\r\n            }\r\n        ]\r\n    }\r\n};\r\n\r\n// Create PeerJS and Socket connections.\r\nconst socket = io();\r\nconst peerjs = new Peer(peerSettings);\r\n\r\n/**\r\n* PeerJS: On Connection.\r\n*\r\n* @param  socket - Clients Socket Object.\r\n* @return void\r\n*/\r\npeerjs.on('open', function() {\r\n    makePeerHeartbeater(peerjs); // Start heartbeat connection.\r\n    consoleMessage('Peerjs Connected'); // Connected message.\r\n    peerjsConnectedUI(); // Display peerjs connected.\r\n    peerConnected = true; // Connection has been made.\r\n    findPeer(); // Find peer to call.\r\n});\r\n\r\n/**\r\n * PeerJS: Start a new call.\r\n *\r\n * @type void\r\n */\r\nfunction startCall(peerid) {\r\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n    navigator.getUserMedia({video: true, audio: true}, function(stream) {\r\n\r\n        // Call loading callback.\r\n        onCallLoading();\r\n\r\n        // Hangup previous call.\r\n        hangupCall();\r\n\r\n        // Start a new call.\r\n        var call = peerjs.call(peerid, stream);\r\n\r\n        // Wait for stream on the call.\r\n        call.on('stream', function(remoteStream) {\r\n            // Call connected callback.\r\n            onCallConnected();\r\n\r\n            // Set Peer Video Display\r\n            $('#their-video').prop('src', URL.createObjectURL(remoteStream));\r\n        });\r\n\r\n        // When call has stopped.\r\n        call.on('close', function() {\r\n            // Remove black box in empty call video.\r\n            $('#their-video').attr('src', '');\r\n        });\r\n\r\n        // UI stuff\r\n        window.existingCall = call;\r\n        $('#their-id').text(call.peer);\r\n\r\n        // Display Call In Progress\r\n        callConnectedUI(true, \"In Call\");\r\n    }, function(err) {\r\n        onClientLoadVideoFailed();\r\n        console.log('Failed to get local stream' ,err);\r\n    });\r\n}\r\n\r\n/**\r\n * PeerJS: When a user is recieving a call.\r\n *\r\n * @param call - Recieving call.\r\n * @return void\r\n */\r\n navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n peerjs.on('call', function(call) {\r\n     navigator.getUserMedia({video: true, audio: true}, function(stream) {\r\n\r\n         // Call loading callback.\r\n         onCallLoading();\r\n\r\n         // Display Call In Progress\r\n         callConnectedUI(true, \"Loading Video..\");\r\n\r\n         // Hangup previous call.\r\n         hangupCall();\r\n\r\n         // Answer the call with an A/V stream.\r\n         call.answer(stream);\r\n\r\n         // Wait for stream on the call.\r\n         call.on('stream', function(remoteStream) {\r\n             // Call connected callback.\r\n             onCallConnected();\r\n\r\n             // Set Peer Video Display\r\n             $('#their-video').prop('src', URL.createObjectURL(remoteStream));\r\n         });\r\n\r\n         // When call has stopped.\r\n         call.on('close', function() {\r\n             // Remove black box in empty call video.\r\n             $('#their-video').attr('src', '');\r\n         });\r\n\r\n         // If there was an error with the call.\r\n         call.on('error', function(err) {\r\n\r\n             // Display error message.\r\n             console.log('Error connecting call, retry.');\r\n\r\n             // Call failed, retry callback.\r\n             onCallFailedRetry();\r\n\r\n             // If the call is working, but not displaying anything close.\r\n             // TODO: Check if its displaying anything.\r\n             if (call.open) {\r\n                 call.close();\r\n             }\r\n\r\n             // Leave the room again.\r\n             room = '';\r\n\r\n             // Setup the UI.\r\n             callConnectedUI(false, 'Call Failed.');\r\n             $('#their-id').text('Not in call.');\r\n\r\n             // Emit to start a new call.\r\n             socket.emit('new call');\r\n         });\r\n\r\n         // UI stuff\r\n         window.existingCall = call;\r\n         $('#their-id').text(call.peer);\r\n\r\n         // Display Call In Progress\r\n         callConnectedUI(true, \"In Call\");\r\n     }, function(err) {\r\n         // Client video failed to load callback.\r\n         onClientLoadVideoFailed();\r\n         console.log('Failed to get local stream' ,err);\r\n     });\r\n });\r\n\r\n/**\r\n * Emitted when the peer is disconnected from the signalling server.\r\n *\r\n * @return void\r\n */\r\npeerjs.on('disconnected', function() {\r\n    // Reconnect user.\r\n    peerjs.reconnect();\r\n\r\n    // Call failed, retry callback.\r\n    onCallFailedRetry();\r\n\r\n    // Dislay disconnected\r\n    console.log(\"Disconnected\");\r\n});\r\n\r\n/**\r\n * PeerJS: Display any errors within the call.\r\n *\r\n * @param err - Errors with call.\r\n * @return void\r\n */\r\npeerjs.on('error', function(err) {\r\n    // Reconnect user.\r\n    peerjs.reconnect();\r\n\r\n    // Call failed, retry callback.\r\n    onCallFailedRetry();\r\n\r\n    // Display Call In Progress\r\n    callConnectedUI(false, 'Calling Failed.');\r\n\r\n    // Check if the error was peer not connected.\r\n    if (err = 'peer-unavailable' && peerjs.disconnected) {\r\n\r\n        // End any calls.\r\n        hangupCall();\r\n\r\n        // Leave the room again.\r\n        room = '';\r\n\r\n        // Setup the UI.\r\n        callConnectedUI(false, 'Call Failed.');\r\n        $('#their-id').text('Not in call.');\r\n\r\n        // Emit to start a new call.\r\n        socket.emit('new call');\r\n    }\r\n\r\n    // Display errors.\r\n    console.log(err.message);\r\n});\r\n\r\n/**\r\n * Socket.IO: On Connection.\r\n *\r\n * @param  socket - Clients Socket Object.\r\n * @return void\r\n */\r\nsocket.on('connect', function (socket) {\r\n    consoleMessage('Socket Connected'); // Connected message.\r\n    socketConnectedUI(); // UI display for connected.\r\n    socketConnected = true; // Connection has been made.\r\n    findPeer(); // Find peer to call.\r\n});\r\n\r\n/**\r\n* Socket.IO: Matched with a peer, and call has started.\r\n*\r\n* @return void\r\n*/\r\nsocket.on('call start', function(data) {\r\n    // Save the room name.\r\n    room = data.room;\r\n\r\n    // For testing, print all collected data.\r\n    console.log(\"Room: \" + data.room);\r\n    console.log(\"Peer ID: \" + data.peer);\r\n\r\n    // Ensure only one person starts the call.\r\n    if (data.caller == 'this')\r\n    {\r\n        // Find party callback.\r\n        onFindingParty();\r\n\r\n        // Start a new call.\r\n        startCall(data.peer);\r\n    }\r\n});\r\n\r\n/**\r\n* Socket.IO: Emitted when a\r\n*\r\n* @return void\r\n*/\r\nsocket.on('partner disconnected', function(data) {\r\n    // Reset the room name.\r\n    room = '';\r\n\r\n    // End any calls.\r\n    hangupCall();\r\n\r\n    // Setup the UI.\r\n    callConnectedUI(false, 'Not in call.');\r\n    $('#their-id').text('Not in call.');\r\n\r\n    // Emitted to remove server side info, and find new peer.\r\n    socket.emit('partner disconnected');\r\n});\r\n\r\n/**\r\n* Socket.IO: When disconnect of the call has occurred.\r\n*\r\n* @return void\r\n*/\r\nsocket.on('disconnect', function() {\r\n    // Client has disconnected callback.\r\n    onClientDisconnected();\r\n\r\n    // Display console message.\r\n    console.log('Connection fell or your browser is closing.');\r\n});\r\n\r\n/**\r\n * Adds a chat message to the chat area.\r\n *\r\n * @param msg\r\n * @return void\r\n */\r\nsocket.on('chat message', function(data) {\r\n\r\n    // Ensure sender does not display their own message.\r\n    if (data.sender != socket.id) {\r\n        // Append your value instead.\r\n        var html = '<div class=\"bubble left\"><div class=\"content\">' + data.message + '</div></div>';\r\n\r\n        // Add chat message to chat area.\r\n        $('#chat-area').append(html);\r\n\r\n        // Scroll to new message.\r\n        $('.chat').scrollTop($('.chat')[0].scrollHeight);\r\n    }\r\n});\r\n\r\n/**\r\n* Socket.IO: Helper function to toggle the UI when socket.io is connected.\r\n*\r\n* @return void\r\n*/\r\nfunction socketConnectedUI() {\r\n    $('#socket-connected').addClass('badge-success').removeClass('badge-danger');\r\n    $('#socket-connected').text('Connected');\r\n    $('#socket-id').text(socket.id);\r\n}\r\n\r\n/**\r\n* PeerJS: Helper function to toggle the UI when peerjs is connected.\r\n*\r\n* @uses PeerJS\r\n* @return void\r\n*/\r\nfunction peerjsConnectedUI() {\r\n    // UI: Peerjs connection status.\r\n    $('#peerjs-connected').addClass('badge-success').removeClass('badge-danger');\r\n    $('#peerjs-connected').text('Connected');\r\n    $('#my-peerjs-id').text(peerjs.id);\r\n}\r\n\r\n/**\r\n* Helper function to display call connected/not connected.\r\n*\r\n* @return void\r\n*/\r\nfunction callConnectedUI(status, message) {\r\n    // Class names.\r\n    var to = 'success';\r\n    var from = 'dark';\r\n\r\n    // Check status\r\n    if (status != true) {\r\n        to = 'dark';\r\n        from = 'success';\r\n    }\r\n\r\n    // UI: Peerjs connection status.\r\n    $('#call-connected').addClass('badge-' + to).removeClass('badge-' + from);\r\n    $('#call-connected').text(message);\r\n}\r\n\r\n/**\r\n* Helper function to display console messages.\r\n*\r\n* @return void\r\n*/\r\nfunction consoleMessage(message = '') {\r\n    console.log(APP_NAME + ':\\t' + message);\r\n}\r\n\r\n/**\r\n* Find a peer to call with.\r\n*\r\n* @return void\r\n*/\r\nfunction findPeer() {\r\n\r\n    // Display message.\r\n    callConnectedUI(false, 'Finding Call.');\r\n\r\n    // Hang up on an existing call if present\r\n    hangupCall();\r\n\r\n    // Ensure services are connected.\r\n    if (socketConnected && peerConnected) {\r\n        // When client is ready to call.\r\n        onClientReady();\r\n\r\n        // Send peerid and find call partner.\r\n        socket.emit('peerid', peerjs.id);\r\n    }\r\n}\r\n\r\n/**\r\n* Setup call information.\r\n*\r\n* @return void\r\n*/\r\nfunction setupCall() {\r\n    // Get audio/video stream\r\n    navigator.getUserMedia({ audio: true, video: true }, function(stream) {\r\n        // Set your local stream video to display.\r\n        $('#my-video').prop('src', URL.createObjectURL(stream));\r\n\r\n        // Save stream video.\r\n        window.localStream = stream;\r\n\r\n        // Hide the enable camera alert.\r\n        $('#enable-camera-alert').hide();\r\n\r\n        // Client video added successfuly.\r\n        onClientLoadVideoSuccess();\r\n    }, function(err) {\r\n        console.log('Failed to get local stream', err);\r\n    });\r\n}\r\n\r\n/**\r\n * Hangup the call if it exists.\r\n *\r\n * @return void\r\n */\r\nfunction hangupCall() {\r\n    // Hang up on an existing call if present\r\n    if (window.existingCall) {\r\n        window.existingCall.close();\r\n    }\r\n\r\n    // Call ended callback.\r\n    onCallEnded();\r\n}\r\n\r\n/**\r\n * Make a peer heart beat connection to keep\r\n * the server alive when connected to our\r\n * heroku applications.\r\n *\r\n * @param peer - Current peer object.\r\n * @return void\r\n */\r\nfunction makePeerHeartbeater(peer) {\r\n    console.log('Heartbeat Started.');\r\n    var timeoutId = 0;\r\n    function heartbeat () {\r\n        timeoutId = setTimeout( heartbeat, 20000 );\r\n        if ( peer.socket._wsOpen() ) {\r\n            peer.socket.send( {type:'HEARTBEAT'} );\r\n        }\r\n    }\r\n    // Start\r\n    heartbeat();\r\n    // return\r\n    return {\r\n        start : function () {\r\n            if ( timeoutId === 0 ) { heartbeat(); }\r\n        },\r\n        stop : function () {\r\n            clearTimeout( timeoutId );\r\n            timeoutId = 0;\r\n        }\r\n    };\r\n}\r\n\r\n/******************************\r\n * User Interface Callbacks.\r\n ******************************/\r\n\r\n/**\r\n * The client has connected to both services\r\n * and is ready to make a call.\r\n *\r\n * {Hide any connecting to services/initial loading icons.}\r\n * @return void\r\n */\r\nfunction onClientReady() {\r\n    //\r\n}\r\n\r\n/**\r\n * Client is looking for a call/another party to\r\n * start calling with.\r\n *\r\n * {Display looking for calls icon/searching for others.}\r\n * @return void\r\n */\r\nfunction onFindingParty() {\r\n    //\r\n}\r\n\r\n/**\r\n * Call is now connecting, and each client is\r\n * waiting for each others video streams to play.\r\n *\r\n * {Display partners video loading icon/call connecting icon.}\r\n * @return void\r\n */\r\nfunction onCallLoading() {\r\n    //\r\n}\r\n\r\n/**\r\n * When a call has successfully connected and loading on one clients end.\r\n * TODO: Check if video stream was connected properly.\r\n *\r\n * {Display video for the user.}\r\n * @param remoteStream - Stream from the other party, display this.\r\n * @return void\r\n */\r\nfunction onCallConnected() {\r\n    $('.video-loader').hide();\r\n}\r\n\r\n/**\r\n * Call connection failed when loading. Each client\r\n * is now reconnecting and attempting to find another call.\r\n *\r\n * {Display call failed/finding a new call icons.}\r\n * @return void\r\n */\r\nfunction onCallFailedRetry() {\r\n    //\r\n}\r\n\r\n/**\r\n * The party you are trying to connect with has disconnected,\r\n * and your client is now reconnecting and finding a new partner.\r\n *\r\n * {Display leaving/ending call icon or call disconnected finding new call.}\r\n * @return void\r\n */\r\nfunction onPartyDisconnected() {\r\n    //\r\n}\r\n\r\n/**\r\n * When the call has been hung up, on the clients.\r\n *\r\n * {Display call ended icon.}\r\n * @return void\r\n */\r\nfunction onCallEnded() {\r\n    $('.video-loader').show();\r\n    $('.chat ul').html('');\r\n}\r\n\r\n/**\r\n * A user has successfully loaded/allowed access to\r\n * use their local video stream.\r\n *\r\n * {Hide any request to access video/display video in box.}\r\n * @param stream - Clients local stream.\r\n * @return void\r\n */\r\nfunction onClientLoadVideoSuccess() {\r\n    //\r\n}\r\n\r\n/**\r\n * When the current clients video failed to load.\r\n *\r\n * {Display alert/modal showing client video load failed.}\r\n * @param err - Error and Reason for disconnect.\r\n * @return void\r\n */\r\nfunction onClientLoadVideoFailed(err) {\r\n    //\r\n}\r\n\r\n/**\r\n * When a user has disconnected from either Socket.IO or Peer.JS\r\n *\r\n * {Stop local video stream/ask to reload page.}\r\n * @return void\r\n */\r\nfunction onClientDisconnected() {\r\n    //\r\n}\r\n\r\n// Click handlers setup\r\n$(function() {\r\n\r\n     // Sending messages\r\n     $('#message-send').click(function() {\r\n         sendChatMessage();\r\n         return false;\r\n     });\r\n\r\n     // When user enters keypress.\r\n     $(document).keypress(function(e) {\r\n         if(e.which == 13) {\r\n             sendChatMessage();\r\n             return false;\r\n         }\r\n     });\r\n\r\n    // Retry if getUserMedia fails\r\n    $('#step1-retry').click(function() {\r\n        setupCall();\r\n    });\r\n\r\n    // Get things started\r\n    setupCall();\r\n});\r\n\r\n// Sends a chat message.\r\nfunction sendChatMessage() {\r\n\r\n    // Check if message is empty.\r\n    if ($('#m').val() == '') {\r\n        return;\r\n    }\r\n\r\n    // Append your value instead.\r\n    var html = '<div class=\"bubble right\"><div class=\"content\">' + $('#m').val() + '</div></div>';\r\n\r\n    // Add chat message to chat area.\r\n    $('#chat-area').append(html);\r\n\r\n    // Emits the chat message to the server.\r\n    socket.emit('chat message', $('#m').val());\r\n\r\n    // Scroll to new message.\r\n    $('.chat').scrollTop($('.chat')[0].scrollHeight);\r\n\r\n    // Resets the value.\r\n    $('#m').val('');\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./public/javascripts/shitfacetime.js"],"sourceRoot":""}