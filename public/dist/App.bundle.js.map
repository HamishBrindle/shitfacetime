{"version":3,"sources":["webpack:///webpack/bootstrap 59f3cb60e238e208acca","webpack:///./public/sass/style.scss","webpack:///./public/javascripts/shitfacetime.js"],"names":["APP_NAME","room","partyVideoStreamURL","clientVideoStreamURL","socketConnected","peerConnected","peerid","peerSettings","host","secure","port","debug","config","url","username","credential","socket","io","peerjs","Peer","on","startPeerHeartbeater","consoleMessage","peerjsConnectedUI","findPartyToCall","startCall","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","video","audio","stream","console","log","hangupCall","call","remoteStream","onCallConnected","onCallEnded","window","existingCall","$","text","peer","callConnectedUI","err","clientLoadVideoFailed","answer","open","close","emit","reconnect","disconnected","message","socketConnectedUI","data","caller","onClientDisconnected","addClass","removeClass","id","status","to","from","setupCall","onClientLoadVideoSuccess","timeoutId","heartbeat","setTimeout","_wsOpen","send","type","start","stop","clearTimeout","onClientReady","onFindingParty","onCallLoading","URL","createObjectURL","prop","onCallFailedRetry","onPartyDisconnected","revokeObjectURL","clientStream","localStream","hide","onClientLoadVideoFailed","click"],"mappings":"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","file":"App.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 59f3cb60e238e208acca","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/sass/style.scss\n// module id = 0\n// module chunks = 0","import '../sass/style.scss';\n\n// Compatibility shim\n// navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n// General Variables\nconst APP_NAME = 'SFT';\nvar room = '';\nvar partyVideoStreamURL = null;\nvar clientVideoStreamURL = null;\nvar socketConnected = false;\nvar peerConnected = false;\nvar peerid = '';\nvar peerSettings = {　\n    host: 'sft-peer.herokuapp.com',\n    secure: true,\n    port: 443,\n    debug: 3,\n    config: {'iceServers': [\n        {\n            url: \"stun:global.stun.twilio.com:3478?transport=udp\"\n        },\n        {\n            url: \"turn:global.turn.twilio.com:3478?transport=udp\",\n            username: \"d44a3662a61e115cf3df7254d44d6b276d90300d065a1560a1618fa49bbdd5f3\",\n            credential: \"0JZh27bgCb3oM0EmXKkctvuQT6S5qIJJthvUxho20r8=\"\n        },\n        {\n            url: \"turn:global.turn.twilio.com:3478?transport=tcp\",\n            username: \"d44a3662a61e115cf3df7254d44d6b276d90300d065a1560a1618fa49bbdd5f3\",\n            credential: \"0JZh27bgCb3oM0EmXKkctvuQT6S5qIJJthvUxho20r8=\"\n        },\n        {\n            url: \"turn:global.turn.twilio.com:443?transport=tcp\",\n            username: \"d44a3662a61e115cf3df7254d44d6b276d90300d065a1560a1618fa49bbdd5f3\",\n            credential: \"0JZh27bgCb3oM0EmXKkctvuQT6S5qIJJthvUxho20r8=\"\n        }\n    ]}\n};\n\n// Create PeerJS and Socket connections.\nconst socket = io();\nconst peerjs = new Peer(peerSettings);\n\n/**\n* PeerJS: On Connection.\n*\n* @param  socket - Clients Socket Object.\n* @return void\n*/\npeerjs.on('open', function() {\n    startPeerHeartbeater(peerjs); // Start heartbeat connection.\n    consoleMessage('Peerjs Connected'); // Connected message.\n    peerjsConnectedUI(); // Display peerjs connected.\n    peerConnected = true; // Connection has been made.\n    findPartyToCall(); // Find peer to call.\n});\n\n// TODO: Add Callback\n\n/**\n * PeerJS: Start a new call.\n *\n * @type void\n */\nfunction startCall(peerid) {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n    navigator.getUserMedia({video: true, audio: true}, function(stream) {\n\n        console.log(\"Starting new call.\");\n\n        // Hangup previous call.\n        hangupCall();\n\n        // Start a new call.\n        var call = peerjs.call(peerid, stream);\n\n        // Wait for stream on the call.\n        call.on('stream', function(remoteStream) {\n            onCallConnected(remoteStream);\n        });\n\n        // When call has stopped.\n        call.on('close', function() {\n            onCallEnded();\n        });\n\n        // COMBAK: Dev UI stuff\n        window.existingCall = call;\n        $('#their-id').text(call.peer);\n\n        // Display Call In Progress\n        callConnectedUI(true, \"In Call\");\n    }, function(err) {\n        clientLoadVideoFailed();\n        console.log('Failed to get local stream', err);\n    });\n}\n\n/**\n * PeerJS: When a user is recieving a call.\n *\n * @param call - Recieving call.\n * @return void\n */\n navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n peerjs.on('call', function(call) {\n     navigator.getUserMedia({video: true, audio: true}, function(stream) {\n         // Display Call In Progress\n         callConnectedUI(true, \"Loading Video..\");\n\n         // Hangup previous call.\n         hangupCall();\n\n         // Answer the call with an A/V stream.\n         call.answer(stream);\n\n         // Wait for stream on the call.\n         call.on('stream', function(remoteStream) {\n             onCallConnected(remoteStream);\n         });\n\n         // When call has stopped.\n         call.on('close', function() {\n             onCallEnded();\n         });\n\n         // If there was an error with the call.\n         call.on('error', function(err) {\n\n             // Display error message.\n             console.log('Error connecting call, retry.');\n\n             // If the call is working, but not displaying anything close.\n             if (call.open) {\n                 call.close();\n             }\n\n             // Leave the room again.\n             room = '';\n\n             // Setup the UI.\n             callConnectedUI(false, 'Call Failed.');\n             $('#their-id').text('Not in call.');\n\n             // Emit to start a new call.\n             socket.emit('new call');\n         });\n\n         // COMBAK: Remove/refractor this!\n         // UI stuff\n         window.existingCall = call;\n         $('#their-id').text(call.peer);\n\n         // Display Call In Progress\n         callConnectedUI(true, \"In Call\");\n     }, function(err) {\n         clientLoadVideoFailed(err);\n         console.log('Failed to get local stream', err);\n     });\n });\n\n/**\n * Emitted when the peer is disconnected from the signalling server.\n *\n * @return void\n */\npeerjs.on('disconnected', function() {\n    // Reconnect user.\n    peerjs.reconnect();\n\n    // Dislay disconnected\n    console.log(\"Disconnected\");\n});\n\n/**\n * PeerJS: Display any errors within the call.\n *\n * @param err - Errors with call.\n * @return void\n */\npeerjs.on('error', function(err) {\n    // Reconnect user.\n    peerjs.reconnect();\n\n    // Display Call In Progress\n    callConnectedUI(false, 'Calling Failed.');\n\n    // Check if the error was peer not connected.\n    if (err = 'peer-unavailable' && peerjs.disconnected) {\n\n        // End any calls.\n        hangupCall();\n\n        // Leave the room again.\n        room = '';\n\n        // Setup the UI.\n        callConnectedUI(false, 'Call Failed.');\n        $('#their-id').text('Not in call.');\n\n        // Emit to start a new call.\n        socket.emit('new call');\n    }\n\n    // Display errors.\n    console.log(err.message);\n});\n\n/**\n * Socket.IO: On Connection.\n *\n * @param  socket - Clients Socket Object.\n * @return void\n */\nsocket.on('connect', function (socket) {\n    consoleMessage('Socket Connected'); // Connected message.\n    socketConnectedUI(); // UI display for connected.\n    socketConnected = true; // Connection has been made.\n    findPartyToCall(); // Find peer to call.\n});\n\n/**\n* Socket.IO: Matched with a peer, and call has started.\n*\n* @return void\n*/\nsocket.on('call start', function(data) {\n    // Save the room name.\n    room = data.room;\n\n    // For testing, print all collected data.\n    console.log(\"Room: \" + data.room);\n    console.log(\"Peer ID: \" + data.peer);\n\n    // Ensure only one person starts the call.\n    if (data.caller == 'this')\n    {\n        startCall(data.peer);\n    }\n});\n\n/**\n* Socket.IO: Emitted when a\n*\n* @return void\n*/\nsocket.on('partner disconnected', function(data) {\n    // Reset the room name.\n    room = '';\n\n    // End any calls.\n    hangupCall();\n\n    // Setup the UI.\n    callConnectedUI(false, 'Not in call.');\n    $('#their-id').text('Not in call.');\n\n    // Emitted to remove server side info, and find new peer.\n    socket.emit('partner disconnected');\n});\n\n/**\n* Socket.IO: When disconnect of the call has occurred.\n*\n* @return void\n*/\nsocket.on('disconnect', function() {\n    console.log('Connection fell or your browser is closing.');\n    onClientDisconnected();\n});\n\n/**\n* Socket.IO: Helper function to toggle the UI when socket.io is connected.\n*\n* @return void\n*/\nfunction socketConnectedUI() {\n    $('#socket-connected').addClass('badge-success').removeClass('badge-danger');\n    $('#socket-connected').text('Connected');\n    $('#socket-id').text(socket.id);\n}\n\n/**\n* PeerJS: Helper function to toggle the UI when peerjs is connected.\n*\n* @uses PeerJS\n* @return void\n*/\nfunction peerjsConnectedUI() {\n    // UI: Peerjs connection status.\n    $('#peerjs-connected').addClass('badge-success').removeClass('badge-danger');\n    $('#peerjs-connected').text('Connected');\n    $('#my-peerjs-id').text(peerjs.id);\n}\n\n/**\n* Helper function to display call connected/not connected.\n*\n* @return void\n*/\nfunction callConnectedUI(status, message) {\n    // Class names.\n    var to = 'success';\n    var from = 'dark';\n\n    // Check status\n    if (status != true) {\n        to = 'dark';\n        from = 'success';\n    }\n\n    // UI: Peerjs connection status.\n    $('#call-connected').addClass('badge-' + to).removeClass('badge-' + from);\n    $('#call-connected').text(message);\n}\n\n/**\n* Helper function to display console messages.\n*\n* @return void\n*/\nfunction consoleMessage(message = '') {\n    console.log(APP_NAME + ':\\t' + message);\n}\n\n/**\n* Find a peer to call with.\n*\n* @return void\n*/\nfunction findPartyToCall() {\n\n    // Display message.\n    callConnectedUI(false, 'Finding Call.');\n\n    // Hang up on an existing call if present\n    hangupCall();\n\n    // Ensure services are connected.\n    if (socketConnected && peerConnected) {\n        // Send peerid and find call partner.\n        socket.emit('peerid', peerjs.id);\n    }\n}\n\n/**\n* Setup call information.\n*\n* @return void\n*/\nfunction setupCall() {\n    // Get audio/video stream\n    navigator.getUserMedia({ audio: true, video: true }, function(stream) {\n        onClientLoadVideoSuccess(stream);\n    }, function(err) {\n        console.log('Failed to get local stream', err);\n    });\n}\n\n/**\n * Hangup the call if it exists.\n *\n * @return void\n */\nfunction hangupCall() {\n    // Hang up on an existing call if present\n    if (window.existingCall) {\n        window.existingCall.close();\n    }\n    onCallEnded();\n}\n\n/**\n * Make a peer heart beat connection to keep\n * the server alive when connected to our\n * heroku applications.\n *\n * @param peer - Current peer object.\n * @return void\n */\nfunction startPeerHeartbeater(peer) {\n    console.log('Heartbeat Started.');\n    var timeoutId = 0;\n    function heartbeat () {\n        timeoutId = setTimeout( heartbeat, 20000 );\n        if (peer.socket._wsOpen()) {\n            peer.socket.send( {type:'HEARTBEAT'} );\n        }\n    }\n    // Start\n    heartbeat();\n    // return\n    return {\n        start : function () {\n            if (timeoutId === 0) {\n                heartbeat();\n            }\n        },\n        stop : function () {\n            clearTimeout(timeoutId);\n            timeoutId = 0;\n        }\n    };\n}\n\n/******************************\n * User Interface Callbacks.\n ******************************/\n\n/**\n * The client has connected to both services\n * and is ready to make a call.\n *\n * {Hide any connecting to services/initial loading icons.}\n * @return void\n */\nfunction onClientReady() {\n    //\n}\n\n/**\n * Client is looking for a call/another party to\n * start calling with.\n *\n * {Display looking for calls icon/searching for others.}\n * @return void\n */\nfunction onFindingParty() {\n    //\n}\n\n/**\n * Call is now connecting, and each client is\n * waiting for each others video streams to play.\n *\n * {Display partners video loading icon/call connecting icon.}\n * @return void\n */\nfunction onCallLoading() {\n    //\n}\n\n/**\n * When a call has successfully connected and loading on one clients end.\n * TODO: Check if video stream was connected properly.\n *\n * {Display video for the user.}\n * @param remoteStream - Stream from the other party, display this.\n * @return void\n */\nfunction onCallConnected(remoteStream) {\n    partyVideoStreamURL = URL.createObjectURL(remoteStream); // Save remote stream URL.\n    $('#their-video').prop('src', partyVideoStreamURL); // Display other partys video stream.\n}\n\n/**\n * Call connection failed when loading. Each client\n * is now reconnecting and attempting to find another call.\n *\n * {Display call failed/finding a new call icons.}\n * @return void\n */\nfunction onCallFailedRetry() {\n    //\n}\n\n/**\n * The party you are trying to connect with has disconnected,\n * and your client is now reconnecting and finding a new partner.\n *\n * {Display leaving/ending call icon or call disconnected finding new call.}\n * @return void\n */\nfunction onPartyDisconnected() {\n    //\n}\n\n/**\n * When the call has been hung up, on the clients.\n *\n * {Display call ended icon.}\n * @return void\n */\nfunction onCallEnded() {\n    $('#their-video').prop('src', ''); // Remove other partys video connection.\n    window.URL.revokeObjectURL(partyVideoStreamURL); // Free up remote video stream URL.\n}\n\n/**\n * A user has successfully loaded/allowed access to\n * use their local video stream.\n *\n * {Hide any request to access video/display video in box.}\n * @param stream - Clients local stream.\n * @return void\n */\nfunction onClientLoadVideoSuccess(clientStream) {\n    clientVideoStreamURL = URL.createObjectURL(clientStream); // Save local client video stream URL.\n    $('#my-video').prop('src', clientVideoStreamURL); // Set your video displays\n    window.localStream = clientStream; // Save stream in global.\n    $('#enable-camera-alert').hide(); // Hide camera alert.\n}\n\n/**\n * When the current clients video failed to load.\n *\n * {Display alert/modal showing client video load failed.}\n * @param err - Error and Reason for disconnect.\n * @return void\n */\nfunction onClientLoadVideoFailed(err) {\n    //\n}\n\n/**\n * When a user has disconnected from either Socket.IO or Peer.JS\n *\n * {Stop local video stream/ask to reload page.}\n * @return void\n */\nfunction onClientDisconnected() {\n    //\n}\n\n// Click handlers setup\n$(function() {\n    // Retry if getUserMedia fails\n    $('#step1-retry').click(function(){\n        setupCall();\n    });\n\n    // Get things started\n    setupCall();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./public/javascripts/shitfacetime.js"],"sourceRoot":""}